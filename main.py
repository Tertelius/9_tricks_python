import random as rnd

#  ------ 1. Выбор случайного элемента из последовательности элементов-----
#
#  функция random.choice(seq) позволяет выбрать случайный элемент из индексируемой последовательности. Речь идет о
#  списках, о кортежах и даже о строках.
#


my_list = [1, 2, 5, 8.4, 'go']
print(rnd.choice(my_list))
print(rnd.choice('привет_мир)'))

#  Практический пример:


def book_picker(books):
    book_choice = rnd.choice(books)
    books.remove(book_choice)
    return f"You picked '{book_choice}'"

books = ["Harry potter", "Don Quixote", "Learn Python by Daniel Diaz", "Dracula"]
print(book_picker(books))
print(books)

#  Ограничения и исключения
#  Если попытаться передать функции random.choice(seq) неиндексируемую последовательность, например — словарь,
#  множество или значение числового типа — возникнет ошибка.
#
#  import random as r
#  scores = {"Jhon": 4, "Ben": 3, "Diana": 5}
#
#  print(r.choice(scores)) # Ошибка KeyError
#  Ошибка будет выдана и при попытке передачи этой функции пустой последовательности:
#
#  empty_list = []
#
# print(r.choice(empty_list)) # Ошибка IndexError





#  ----- 2. Распаковка элементов с помощью *
#
# Иногда нужно вывести элементы итерируемого типа, разделив их пробелами. Чаще всего мне доводилось встречать
# такое решение этой задачи:

my_list = [1, 2, 3, 4, 7, 8]

for i in my_list:
    print(i, end=' ')


#  Хотя этот код и решает задачу, он, так сказать, не особенно «питонистический». Гораздо проще будет решение, в
#  котором используется оператор распаковки — *:

print('')
print(*my_list)


#  Обратите внимание на то, что оператор распаковки всегда размещают слева от имени переменной. Этот оператор как бы
#  предлагает Python «разобрать на части» переменную итерируемого типа.
#
#  Итерируемой сущностью считается любая последовательность, которую можно перебрать в цикле for. Если нужно узнать
#  о том, является ли некий тип итерируемым — можно воспользоваться функцией iter().

print(iter("This is a string"))  # Сообщение об объекте str_iterator

print(iter(["this", "is", "a", "list"]))  # Сообщение об объекте list_iterator

#  print(iter(1)) TypeError: 'int' object is not iterable
